Here we use the DWT Cycle Count to benchmark code, it's a 32-bit counter, so you'll want to contain test within wrapping limits. I tend to add a secondary measurement of milliseconds around that to provide a sanity check

volatile unsigned int *DWT_CYCCNT   = (volatile unsigned int *)0xE0001004; //address of the register
volatile unsigned int *DWT_CONTROL  = (volatile unsigned int *)0xE0001000; //address of the registervolatile unsigned int *DWT_LAR      = (volatile unsigned int *)0xE0001FB0; //address of the registervolatile unsigned int *SCB_DEMCR    = (volatile unsigned int *)0xE000EDFC; //address of the register

...

  *DWT_LAR = 0xC5ACCE55; // unlock (CM7)
  *SCB_DEMCR |= 0x01000000;  *DWT_CYCCNT = 0; // reset the counter  *DWT_CONTROL |= 1 ; // enable the counter

...

    x = *DWT_CYCCNT;

... Code Under Test

        y = *DWT_CYCCNT;

        x = (y - x); // Elapsed clock ticks, at SystemCoreClock